#!/bin/bash
if [[ $(id -u) != 0 ]]; then
    echo "$0: this command must be run as root!" >&2
    exit 1
fi
function run {
    set -o errexit # exit immediately if a command fails
    set -o errtrace # … in functions as well
    function err {
	echo "$0: error on line $LINENO ‘$BASH_COMMAND’, exiting" >&2
    }
    trap err ERR
    export LC_ALL=$LANG # needed in container, apparently not set by default
    lxc-create -n ceylon-ci -t debian
    trap 'lxc-destroy -n ceylon-ci; err' ERR # clean up the container in any event
    function run { lxc-start -n ceylon-ci -- "$@"; } # warning: lxc-execute doesn’t work (requires lxc within container)
    function runin { name=$1; shift; run bash -c "export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64/jre; cd $name; $*"; } # yes, $*, not $@. Needs to be within the -c argument!
    cp {,/var/lib/lxc/ceylon-ci/rootfs}/etc/apt/sources.list
    run apt-get update
    run apt-get install --yes --no-install-recommends openjdk-7-jdk ant git
    run mkdir /root/ceylon
    runin '/root/ceylon' git clone https://github.com/ceylon/ceylon-dist.git
    runin '/root/ceylon/ceylon-dist' ant setup
    runin '/root/ceylon/ceylon-dist' ant publish-all
    runin '/root/ceylon' git clone https://github.com/ceylon/ceylon-sdk.git
    runin '/root/ceylon/ceylon-sdk' ant publish
    runin '/root/ceylon' git clone https://github.com/ceylon/ceylon.formatter.git
    runin '/root/ceylon/ceylon.formatter' ant test
    lxc-destroy -n ceylon-ci
}
mailText() {
    sleep 1
    echo EHLO lucaswerkmeister.de
    sleep 2
    cat <<EOF
MAIL FROM: <bot@lucaswerkmeister.de>
RCPT TO: <mail@lucaswerkmeister.de>
DATA
Subject: [ceylon-ci] $(date -Idate)
Date: $(date -R)
From: <bot@lucaswerkmeister.de>
To: <mail@lucaswerkmeister.de>
Message-ID: <ceylon-ci-$(date +%s)@lucaswerkmeister.de>
Content-Type: multipart/mixed;
 boundary="boundary"

This is a multi-part message in MIME format.
--boundary
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit

Hi! The Ceylon build failed.
Here's the last couple of lines of the report:

EOF
    tail "$1"
    cat <<EOF
--boundary
Content-Type: text/plain; charset=UTF-8;
 name="report.txt"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="report.txt"

EOF
	base64 "$1"
	echo --boundary
	echo .
	echo QUIT
	sleep 1
}

if ! (run &> /tmp/report); then # use subshell: don’t exit when run function exits
    mailText /tmp/report | telnet localhost 25
fi
